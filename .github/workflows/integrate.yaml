# Automatically build and test HeardIT back-end on push and pull-request
# using GitHub Actions.

name: HeardIT pipeline

on:
    push:
        branches: ["*"]
    pull_request:
        branches: ["*"]

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    IMAGE_NAME: jumorto/hearditbackend-image:latest

jobs:
    build_and_test_search_service:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: heardit_search_service
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Setup Gradle
              uses: gradle/gradle-build-action@v3
            - name: Make gradlew executable
              run: chmod +x ./gradlew
            - name: Build with Gradle Wrapper
              run: ./gradlew build

            - name: Run Tests
              run: ./gradlew test

    build_and_test_songmanager_service:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: heardit_songmanager_service
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Setup Gradle
              uses: gradle/gradle-build-action@v3
            - name: Make gradlew executable
              run: chmod +x ./gradlew
            - name: Build with Gradle Wrapper
              run: ./gradlew build

            - name: Run Tests
              run: ./gradlew test

    publish-docker-Hub-search-service:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: heardit_search_service
        needs: build_and_test_search_service
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker
              uses: docker/setup-buildx-action@v1

            - name: Build and push Docker image
              run: |
                  docker build -t jumorto/heardit-search-service .
                  docker login -u jumorto -p ${{ secrets.DOCKERHUB_TOKEN }}
                  docker push jumorto/heardit-search-service

    publish-docker-Hub-songmanager-service:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: heardit_songmanager_service
        needs: build_and_test_songmanager_service
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker
              uses: docker/setup-buildx-action@v1

            - name: Build and push Docker image
              run: |
                  docker build -t jumorto/heardit-songmanager-service .
                  docker login -u jumorto -p ${{ secrets.DOCKERHUB_TOKEN }}
                  docker push jumorto/heardit-songmanager-service

    # deploy:
    #     runs-on: ubuntu-latest
    #     defaults:
    #         run:
    #             working-directory: heardit_stream_service
    #     needs: publish-docker-Hub

    #     steps:
    #         - name: Checkout Repository
    #           uses: actions/checkout@v4

    #         - name: Set up Google Cloud SDK
    #           uses: google-github-actions/setup-gcloud@v0.3.0
    #           with:
    #               version: "latest"
    #               project_id: ${{ secrets.GCP_PROJECT_ID }}
    #               service_account_key: ${{ secrets.GCP_SA_KEY }}

    #         - name: Deploy to Cloud Run
    #           run: |
    #               gcloud run deploy heardit-backend --image=jumorto/heardit-backend:latest --platform=managed --region=europe-west4
