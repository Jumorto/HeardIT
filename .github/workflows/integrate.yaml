# Automatically build and test HeardIT back-end on push and pull-request
# using GitHub Actions.

name: HeardIT pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: jumorto/hearditbackend-image:latest

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test

  publish-docker-Hub:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        run: |
          docker build -t jumorto/heardit-backend .
          docker login -u jumorto -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push jumorto/heardit-backend

  deploy:
    runs-on: ubuntu-latest
    needs: publish-docker-Hub

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy heardit-backend --image=jumorto/heardit-backend:latest --platform=managed --region=europe-west4
         
         

#  publish-github-container-Registry:
#    name: publish image
#    runs-on: ubuntu-latest
#    needs: build_and_test
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login
#        run: |
#          echo ${{ secrets.PAT_J }} | docker login ghcr.io -u jumorto --password-stdin
#      - name: Build and Publish
#        run: |
#          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#  deploy:
#    needs: publish-github-container-Registry
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    name: deploy image
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Set up SSH keys and connect
#        run: |
#          mkdir -p ~/.ssh && \
#          chmod 700 ~/.ssh && \
#          install -m 600 /dev/null ~/.ssh/id_rsa && \
#          echo "${{ secrets.BG_LAPTOP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && \
#          chmod 600 ~/.ssh/id_rsa && \
#          ssh-keyscan -H ${{ secrets.BG_LAPTOP_HOST }} >> ~/.ssh/known_hosts && \
#          chmod 644 ~/.ssh/known_hosts
#      - name: connect and pull
#        run: ssh ${{ secrets.BG_LAPTOP_USER }}@${{ secrets.BG_LAPTOP_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
#      - name: cleanup
#        run: rm -rf ~/.ssh


